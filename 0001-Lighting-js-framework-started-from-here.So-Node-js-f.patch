From f7b78421f087c7fa5e39af20b0e3c5006112ab94 Mon Sep 17 00:00:00 2001
From: kathiravan <kathiravan.s@ltts.com>
Date: Tue, 7 Apr 2020 11:11:32 +0530
Subject: [PATCH 1/9] Lighting js framework started from here.So Node js
 framework files are removed.

---
 .editorconfig               |  12 --
 .eslintignore               |   1 -
 .eslintrc.js                | 130 ---------------------
 package.json                |  42 -------
 stub_modules/lgire/index.js | 224 ------------------------------------
 test/mainMenu.test.js       |  33 ------
 test/setup.js               |  16 ---
 7 files changed, 458 deletions(-)
 delete mode 100644 .editorconfig
 delete mode 100644 .eslintignore
 delete mode 100644 .eslintrc.js
 delete mode 100644 package.json
 delete mode 100644 stub_modules/lgire/index.js
 delete mode 100644 test/mainMenu.test.js
 delete mode 100644 test/setup.js

diff --git a/.editorconfig b/.editorconfig
deleted file mode 100644
index 6b1bf60..0000000
--- a/.editorconfig
+++ /dev/null
@@ -1,12 +0,0 @@
-root = true
-
-[*]
-charset = utf-8
-indent_style = space
-indent_size = 4
-end_of_line = lf
-trim_trailing_whitespace = true
-insert_final_newline = true
-
-[package.json]
-indent_size = 2
diff --git a/.eslintignore b/.eslintignore
deleted file mode 100644
index 3c3629e..0000000
--- a/.eslintignore
+++ /dev/null
@@ -1 +0,0 @@
-node_modules
diff --git a/.eslintrc.js b/.eslintrc.js
deleted file mode 100644
index 7151fd1..0000000
--- a/.eslintrc.js
+++ /dev/null
@@ -1,130 +0,0 @@
-/*
- * If not stated otherwise in this file or this component's LICENSE file the
- * following copyright and licenses apply:
- *
- * Operator reference application
- *
- * Copyright (C) 2018-2019 Liberty Global B.V.
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation; version 2 of the License.
- */
-module.exports = {
-    'extends': 'airbnb-base',
-    'plugins': ['import', 'promise'],
-    'env': {
-        'node': true,
-        'mocha': true
-    },
-    'parserOptions': {
-        'ecmaVersion': 6,
-        'sourceType': 'script'
-    },
-    'settings': {
-        'import/resolver': {
-            'eslint-import-resolver-node': {
-                'moduleDirectory': [ 'src' ]
-            }
-        },
-        // a list of modules that should be resolved but are installed globally (or have no path on the filesystem)
-        'import/core-modules': ['lgire', 'srvmgr', 'iarm-bus']
-    },
-    'globals': {
-        'require' : true,
-        'environment' : true,
-        'exports': true,
-        'setInterval': true,
-        'setTimeout': true,
-        'clearTimeout': true,
-        'clearInterval': true,
-        'process': true,
-        'sinon': true,
-        'expect': true,
-        'px': true,
-        'scene': true,
-    },
-    'rules': {
-        // Override some AirBNB rules
-        'indent': ['error', 4, { "SwitchCase": 1 }], // we use 4 spaces for indents
-        'strict': ['error', 'global'], // we don't use neither ES2015 nor Babel
-        'no-plusplus': 0, // allow ++ -- in loops
-        'no-use-before-define': ['error', 'nofunc'], // allow functions to be used before function declarations
-        'no-unused-vars': ['error', { vars: 'local', args: 'none' }],
-        'no-unused-expressions': 0, // allow .to.be.true in specs
-        'arrow-body-style': 'off',
-        'no-shadow': 'off',
-        'func-names': 'off',
-        'no-underscore-dangle': 'off',
-        'max-len': 'off',
-        'no-bitwise': 'off',
-        'no-mixed-operators': 'warn',
-        'no-param-reassign': ['warn', { 'props': false }],
-        'padded-blocks': 'off',
-        'no-nested-ternary': 'off',
-        'prefer-rest-params': 'warn',
-        'guard-for-in': 'warn',
-        'no-restricted-syntax': 'warn',
-        'curly': ["warn", "all"],
-        'object-curly-newline': 'off',
-        "comma-dangle": ["error", {
-            "arrays": "always-multiline",
-            "objects": "always-multiline",
-            "imports": "always-multiline",
-            "exports": "always-multiline",
-            "functions": "ignore"
-        }],
-
-        // Override Airbnb rules from 'import' eslint plugin
-        'import/no-unresolved': ['error', { 'commonjs': true }],
-        'import/no-dynamic-require': 'off',
-        'import/no-extraneous-dependencies': ['error', {
-            // don't show an error when optional and dev dependencies are imported
-              devDependencies: true,
-              optionalDependencies: true,
-            }],
-
-        'global-require': 'warn',
-
-        // Temporary set these Airbnb rules to warn level
-        // to gradually clean up and stylize the code.
-        'quotes': ['warn', 'single', { avoidEscape: true }],
-        'quote-props': ['warn', 'as-needed', { 'keywords': false, 'unnecessary': true, 'numbers': false }],
-        'no-multiple-empty-lines': ['warn', { max: 2, maxEOF: 1 }],
-        'prefer-arrow-callback': ['warn', {
-              allowNamedFunctions: false,
-              allowUnboundThis: true,
-            }],
-        'vars-on-top': 'warn',
-        'prefer-template': 'warn',
-        'operator-assignment': ['warn', 'always'],
-        'object-shorthand': ['warn', 'always', {
-              ignoreConstructors: false,
-              avoidQuotes: true,
-            }],
-        'no-template-curly-in-string': 'warn',
-        'spaced-comment': ['warn', 'always', {
-            line: {
-                exceptions: ['-', '+'],
-                markers: ['=', '!'], // space here to support sprockets directives
-            },
-            block: {
-                exceptions: ['-', '+'],
-                markers: ['=', '!'], // space here to support sprockets directives
-                balanced: false,
-                }
-            }],
-        'space-infix-ops': 'warn',
-        'prefer-const': ['warn', {
-              destructuring: 'any',
-              ignoreReadBeforeAssign: true,
-            }],
-        'no-case-declarations': 'error',
-        'class-methods-use-this': 'off', // some classes have methods without 'this' - fixing this requires a lot of refactoring.
-
-        // for Promise plugin
-        'promise/catch-or-return': 'error',
-        'promise/no-promise-in-callback': 'error',
-        'promise/no-callback-in-promise': 'error',
-    }
-};
diff --git a/package.json b/package.json
deleted file mode 100644
index c240b91..0000000
--- a/package.json
+++ /dev/null
@@ -1,42 +0,0 @@
-{
-  "name": "refapp",
-  "version": "0.0.1",
-  "description": "Operator reference application",
-  "main": "main.js",
-  "scripts": {
-    "start": "",
-    "test": "jest",
-    "test:update": "jest --updateSnapshot"
-  },
-  "repository": {
-    "type": "git",
-    "url": "git+https://github.com/LibertyGlobal/refapp.git"
-  },
-  "author": "LibertyGlobal",
-  "license": "LibertyGlobal",
-  "bugs": {
-    "url": "https://github.com/LibertyGlobal/refapp/issues"
-  },
-  "homepage": "https://github.com/LibertyGlobal/refapp#readme",
-  "devDependencies": {
-    "app-module-path": "^2.2.0",
-    "eslint": "^4.18.0",
-    "eslint-config-airbnb-base": "^12.1.0",
-    "eslint-plugin-import": "^2.8.0",
-    "eslint-plugin-promise": "^3.6.0",
-    "jest": "^23.4.1"
-  },
-  "dependencies": {
-    "dbus-native": "^0.2.5"
-  },
-  "jest": {
-    "testEnvironment": "node",
-    "setupFiles": [
-      "./test/setup.js"
-    ],
-    "modulePaths": [
-      "./src",
-      "./stub_modules"
-    ]
-  }
-}
diff --git a/stub_modules/lgire/index.js b/stub_modules/lgire/index.js
deleted file mode 100644
index e9af8a9..0000000
--- a/stub_modules/lgire/index.js
+++ /dev/null
@@ -1,224 +0,0 @@
-/*
- * If not stated otherwise in this file or this component's LICENSE file the
- * following copyright and licenses apply:
- *
- * Operator reference application
- *
- * Copyright (C) 2018-2019 Liberty Global B.V.
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation; version 2 of the License.
- */
-'use strict';
-exports.Node = class {
-    constructor(id, { width, height, parent }) {
-        this.styles = {};
-        this.children = [];
-        this.id = id;
-        this.styles.width = width;
-        this.styles.height = height;
-
-        parent && parent.children.push(this);
-    }
-
-    setProto() {}
-    setWidth(val) {
-        this.styles.width = val;
-    }
-    setHeight(val) {
-        this.styles.height = val;
-    }
-    setTop(val) {
-        this.styles.top = val;
-    }
-    setLeft(val) {
-        this.styles.left = val;
-    }
-    setBackgroundColorWithOpacity(val) {
-        this.styles.backgroundColor = val;
-    }
-    setFontFamily(val) {
-        this.styles.fontFamily = val;
-    }
-    setFontSize(val) {
-        this.styles.fontSize = val;
-    }
-    setFontColorWithOpacity(val) {
-        this.styles.fontColor = val;
-    }
-    setText(val) {
-        this.styles.text = val;
-    }
-    setAlign(val) {
-        this.styles.align = val;
-    }
-    setVerticalAlign(val) {
-        this.styles.verticalAlign = val;
-    }
-    setTextAlign(val) {
-        this.styles.textAlign = val;
-    }
-    setTextValign(val) {
-        this.styles.textValign = val;
-    }
-    setTextOverflow(val) {
-        this.styles.textOverflow = val;
-    }
-    setWordWrap(val) {
-        this.styles.wordWrap = val;
-    }
-    setLineHeight(val) {
-        this.styles.lineHeight = val;
-    }
-    setBorderImage(val) {
-        this.styles.borderImage = '/path/to/image';
-    }
-    setBorderCenterFill(val) {
-        this.styles.borderCenterFill = val;
-    }
-    setBorder(val) {
-        this.styles.border = val;
-    }
-    setBorderColorWithOpacity(val) {
-        this.styles.borderColor = val;
-    }
-    setPadding(val) {
-        this.styles.padding = val;
-    }
-    setOverflow(val) {
-        this.styles.overflow = val;
-    }
-    setVisible(val) {
-        this.styles.visible = val;
-    }
-    setOpacity(val) {
-        this.styles.opacity = val;
-    }
-    setFile(val) {
-        this.styles.file = '/path/to/image';
-    }
-
-    getTop() {
-        return this.styles.top;
-    }
-    getLeft() {
-        return this.styles.left;
-    }
-    getBackgroundColorWithOpacity() {
-        return this.styles.backgroundColorWithOpacity;
-    }
-    getFontFamily() {
-        return this.styles.fontFamily;
-    }
-    getFontSize() {
-        return this.styles.fontSize;
-    }
-    getFontColorWithOpacity() {
-        return this.styles.fontColorWithOpacity;
-    }
-    getText() {
-        return this.styles.text;
-    }
-    getAlign() {
-        return this.styles.align;
-    }
-    getVerticalAlign() {
-        return this.styles.verticalAlign;
-    }
-    getTextAlign() {
-        return this.styles.textAlign;
-    }
-    getTextValign() {
-        return this.styles.textValign;
-    }
-    getTextOverflow() {
-        return this.styles.textOverflow;
-    }
-    getWordWrap() {
-        return this.styles.wordWrap;
-    }
-    getLineHeight() {
-        return this.styles.lineHeight;
-    }
-    getBorderImage() {
-        return this.styles.borderImage;
-    }
-    getBorderCenterFill() {
-        return this.styles.borderCenterFill;
-    }
-    getBorder() {
-        return this.styles.border;
-    }
-    getBorderColorWithOpacity() {
-        return this.styles.borderColorWithOpacity;
-    }
-    getPadding() {
-        return this.styles.padding;
-    }
-    getOverflow() {
-        return this.styles.overflow;
-    }
-    getVisible() {
-        return this.styles.visible;
-    }
-    getOpacity() {
-        return this.styles.opacity;
-    }
-    getFile() {
-        return this.styles.file;
-    }
-    getWidth() {
-        return this.styles.width;
-    }
-    getHeight() {
-        return this.styles.height;
-    }
-    getNodeById(id) {
-        return this.id === id ? this : this.children.find(child => child.getNodeById(id));
-    }
-    markMoving(state) {
-        this.animOptions.state = state;
-    }
-    setPositionRelative(moveX, moveY) {
-        this.styles.left += moveX;
-        this.styles.top += moveY;
-    }
-    animate() {
-
-    }
-
-    toPretty() {
-        const nodesStructure = JSON.stringify(formatNodesTree(this), null, 4);
-        return `nodes structure:\n${nodesStructure}\nstyles:${formatStyles(this)}`;
-    }
-};
-
-exports.Animation = {
-    addTimeline(duration, cb) {
-        cb(2);
-    },
-    posMapN() {},
-    POS_MAP_LINEAR: 'POS_MAP_LINEAR',
-};
-
-function formatStyles(tree) {
-    const queue = [];
-    queue.push(tree);
-    let res = '';
-
-    while (queue.length) {
-        const current = queue.shift();
-        queue.push(...current.children);
-        res += `\n${current.id} styles:\n${JSON.stringify(current.styles, null, 4)}`;
-    }
-
-    return res;
-}
-
-function formatNodesTree(root) {
-    return {
-        id: root.id,
-        children: root.children.map(formatNodesTree),
-    };
-}
diff --git a/test/mainMenu.test.js b/test/mainMenu.test.js
deleted file mode 100644
index eaa6d78..0000000
--- a/test/mainMenu.test.js
+++ /dev/null
@@ -1,33 +0,0 @@
-/*
- * If not stated otherwise in this file or this component's LICENSE file the
- * following copyright and licenses apply:
- *
- * Operator reference application
- *
- * Copyright (C) 2018-2019 Liberty Global B.V.
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation; version 2 of the License.
- */
-'use strict';
-
-const { model } = require('components/mainMenu/model');
-const controller = require('components/mainMenu/controller');
-const { Keys, KeyPressTypes } = require('shared/constants');
-
-const tree = controller.show(model);
-
-test('should render correctly', () => {
-    expect(tree.toPretty()).toMatchSnapshot();
-});
-
-test('should handle Right key and navigate right', () => {
-    controller.onKey({ keyCode: Keys.Right, keyType: KeyPressTypes.keyDown });
-    expect(tree.toPretty()).toMatchSnapshot();
-});
-
-test('should handle Left key and navigate left', () => {
-    controller.onKey({ keyCode: Keys.Left, keyType: KeyPressTypes.keyDown });
-    expect(tree.toPretty()).toMatchSnapshot();
-});
diff --git a/test/setup.js b/test/setup.js
deleted file mode 100644
index 04a12b2..0000000
--- a/test/setup.js
+++ /dev/null
@@ -1,16 +0,0 @@
-/*
- * If not stated otherwise in this file or this component's LICENSE file the
- * following copyright and licenses apply:
- *
- * Operator reference application
- *
- * Copyright (C) 2018-2019 Liberty Global B.V.
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation; version 2 of the License.
- */
-
-'use strict';
-
-global.scene = {};
-- 
2.23.0.windows.1

